{"version":3,"sources":["components/countTotalFeedback/countTotalFeedback.js","App.js","reportWebVitals.js","index.js"],"names":["CountTotalFeedback","state","good","neutral","bad","total","positiveFeedback","handleGoFeedback","e","name","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","type","onClick","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAEMA,E,4MACJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,iBAAkB,G,EAGpBC,iBAAmB,SAAAC,GACjB,IAAMC,EAAOD,EAAEE,OAAOD,KACtB,EAAKE,UAAS,SAAAC,GACZ,OAAO,eACJH,EAAOG,EAAUH,GAAQ,MAG9B,EAAKI,qBACL,EAAKC,mC,EAGPD,mBAAqB,WACnB,EAAKF,UAAS,SAAAC,GACZ,MAAO,CAAEP,MAAOO,EAAUP,MAAQ,O,EAItCS,gCAAkC,WAChC,EAAKH,UAAS,SAAAC,GACZ,MAAO,CACLN,kBAAoBM,EAAUV,KAAOU,EAAUP,MAAS,KAAKU,e,4CAKnE,WACE,MAAwDC,KAAKf,MAArDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,iBACnC,OACE,qCACE,uDACA,wBAAQW,KAAK,SAASR,KAAK,OAAOS,QAASF,KAAKT,iBAAhD,kBAGA,wBAAQU,KAAK,SAASR,KAAK,UAAUS,QAASF,KAAKT,iBAAnD,qBAGA,wBAAQU,KAAK,SAASR,KAAK,MAAMS,QAASF,KAAKT,iBAA/C,iBAGA,4CACA,yCAAYL,KACZ,4CAAeC,KACf,wCAAWC,KACX,0CAAaC,KACb,sDAAyBC,EAAzB,c,GArDyBa,aA2DlBnB,ICvDToB,E,4JACJ,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUF,aAUHC,ICJAE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a00726fa.chunk.js","sourcesContent":["import { Component } from 'react';\r\n\r\nclass CountTotalFeedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positiveFeedback: 0,\r\n  };\r\n\r\n  handleGoFeedback = e => {\r\n    const name = e.target.name;\r\n    this.setState(prevState => {\r\n      return {\r\n        [name]: prevState[name] + 1,\r\n      };\r\n    });\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    this.setState(prevState => {\r\n      return { total: prevState.total + 1 };\r\n    });\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        positiveFeedback: ((prevState.good / prevState.total) * 100).toFixed(),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad, total, positiveFeedback } = this.state;\r\n    return (\r\n      <>\r\n        <h1>Please leave feedback</h1>\r\n        <button type=\"button\" name=\"good\" onClick={this.handleGoFeedback}>\r\n          Good\r\n        </button>\r\n        <button type=\"button\" name=\"neutral\" onClick={this.handleGoFeedback}>\r\n          Neutral\r\n        </button>\r\n        <button type=\"button\" name=\"bad\" onClick={this.handleGoFeedback}>\r\n          Bad\r\n        </button>\r\n        <h2>Statistics</h2>\r\n        <span>Good:{good}</span>\r\n        <span>Neutral:{neutral}</span>\r\n        <span>Bad:{bad}</span>\r\n        <span>Total:{total}</span>\r\n        <span>Positive feedback:{positiveFeedback}%</span>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountTotalFeedback;\r\n","import { Component } from 'react';\n\nimport './App.css';\n\nimport CountTotalFeedback from './components/countTotalFeedback/countTotalFeedback';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <CountTotalFeedback />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}